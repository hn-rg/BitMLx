name:                bitmlx
version:             0.1.0.0
-- synopsis:
-- description:
homepage:            https://github.com/linen101/bitmlx#readme
license:             BSD3
license-file:        LICENSE
author:              Federico Badaloni, Chrysa Oikonomou
maintainer:          linen@protonmail.com
copyright:           2021, Some rights reserved
category:            Web
build-type:          Simple
cabal-version:       >=1.10
extra-source-files:  README.md

library
  hs-source-dirs:      src
  exposed-modules:
    Coins
    Syntax.BitML
    Syntax.BitMLx
    Syntax.Common
    Compiler
    Compiler.Advertisement
    Compiler.Authorize
    Compiler.Auxiliary
    Compiler.Common
    Compiler.Contract
    Compiler.Error
    Compiler.Preconditions
    Compiler.PriorityChoice
    Compiler.Reveal
    Compiler.Settings
    Compiler.StepSecrets
    Compiler.Stipulation
    Compiler.Split
    Compiler.Withdraw
    Compiler.WellFormed
    Pretty
  build-depends: 
    prettyprinter,
    vector,      
    vector-algorithms,
    containers,
    base >= 4.7 && < 5
  default-language:    Haskell2010
    
executable bitmlx-exe
  main-is:             Main.hs
  hs-source-dirs:      app
  other-modules:
    Examples.SimpleExchange
    Examples.Escrow
    Examples.MutualTC
    Examples.NaiveExchangeLottery
    ExampleRunner
  build-depends:
      base >=4.7 && <5
    , bitmlx
    , text
    , prettyprinter
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  default-language:    Haskell2010

test-suite bitmlx-test
  type:               exitcode-stdio-1.0
  hs-source-dirs:     test
  main-is:            Main.hs
  hs-source-dirs:      app
  other-modules:
    TestWithdraw.BitMLx
    TestWithdraw.Bitcoin
    TestWithdraw.Dogecoin
    TestWithdraw.Test
    TestAuthorize.BitMLx
    TestAuthorize.Bitcoin
    TestAuthorize.Dogecoin
    TestAuthorize.Test
    TestReveal.BitMLx
    TestReveal.Bitcoin
    TestReveal.Dogecoin
    TestReveal.Test
    TestRevealIf.BitMLx
    TestRevealIf.Bitcoin
    TestRevealIf.Dogecoin
    TestRevealIf.Test
    TestSplit.BitMLx
    TestSplit.Bitcoin
    TestSplit.Dogecoin
    TestSplit.Test
    TestPriorityChoice.BitMLx
    TestPriorityChoice.Bitcoin
    TestPriorityChoice.Dogecoin
    TestPriorityChoice.Test
    TestWithdrawD.BitMLx
    TestWithdrawD.Bitcoin
    TestWithdrawD.Dogecoin
    TestWithdrawD.Test
    TestManyParticipantsWithdraw.BitMLx
    TestManyParticipantsWithdraw.Bitcoin
    TestManyParticipantsWithdraw.Dogecoin
    TestManyParticipantsWithdraw.Test
    TestManyParticipantsPriorityChoice.BitMLx
    TestManyParticipantsPriorityChoice.Bitcoin
    TestManyParticipantsPriorityChoice.Dogecoin
    TestManyParticipantsPriorityChoice.Test
    TestStipulation
    TestAdvertisement.BitMLx
    TestAdvertisement.Bitcoin
    TestAdvertisement.Dogecoin
    TestAdvertisement.Test
    WellFormedFails.InconsistentWithdraw
    WellFormedFails.InconsistentSplit
    WellFormedFails.UncommitedSecret
    WellFormedFails.NoDeposit
    TestSettings
  build-depends:      base >= 4.7 && < 5, tasty, tasty-hunit, tasty-quickcheck, containers, bitmlx
  default-language:   Haskell2010
